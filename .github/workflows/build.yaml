name: Docker Build and Release
on: [ push ]
env:
#### An dieser Stelle müssen eure persönlichen Umgebungsvariablen eingetragen werden
  # Tip: Die Token/der API-Key werden als Secrets in den Repository-Settings eingetragen und hier referenziert.
  APP_NAME: "sixpointthree-pet-clinic" #<-- hier wird der Name euer Heroku-App eingetragen
  HEROKU_API_KEY: ${{ secrets.HEROKU_API_KEY }} 
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 
  SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
jobs:
  compile:
    name: Compile
    runs-on: ubuntu-20.04
    steps:
    - uses: actions/checkout@v2
    - name: Setup Java
      uses: actions/setup-java@v2
      with:
        distribution: temurin
        java-version: 11
        cache: maven
    - name: Cache SonarCloud packages
      uses: actions/cache@v1
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar
    #- name: Build and analyze
    #  run: mvn -B verify org.sonarsource.scanner.maven:sonar-maven-plugin:sonar -Pcoverage
    #  env:
    #    # Needed to get some information about the pull request, if any
    #    GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    #    # SonarCloud access token should be generated from https://sonarcloud.io/account/security/
    #    SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    #### AUFGABE 3 DOCKER BUILD UND PUSH
    - name: Compile, build and push
      run: |
        heroku container:login
        mvn package
        docker build --tag registry.heroku.com/${APP_NAME}/web -f Dockerfile .
        docker push registry.heroku.com/${APP_NAME}/web
        
    - name: Release
      run: |
        #### AUFGABE 4 DEPLOYMENT AUF HEROKU
          # hier wird die 4. Aufgabe bearbeitet: Release der App auf Heroku
